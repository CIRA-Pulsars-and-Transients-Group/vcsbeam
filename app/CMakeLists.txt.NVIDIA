# Fine PFB Offline

set(GPU_LIBS "-lcufft")

# (Depends only on CUDA and MWALIB, which are global dependencies)
add_executable(fine_pfb_offline fine_pfb_offline.cu)
target_link_libraries(fine_pfb_offline vcsbeam ${GPU_LIBS})
target_include_directories(fine_pfb_offline PUBLIC ${CMAKE_BINARY_DIR})
install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/fine_pfb_offline DESTINATION bin)

# Tied array beamformer

# if (PAL_FOUND AND PSRFITS_UTILS_FOUND AND HYPERBEAM_FOUND AND VDIFIO_FOUND)
    add_executable(make_mwa_tied_array_beam make_mwa_tied_array_beam.c)
    target_link_libraries(make_mwa_tied_array_beam vcsbeam ${GPU_LIBS})
    target_include_directories(make_mwa_tied_array_beam PUBLIC ${CMAKE_BINARY_DIR})
    install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/make_mwa_tied_array_beam DESTINATION bin)
# endif ()

# Incoherent beamformer

# if (PSRFITS_UTILS_FOUND)
    add_executable(make_mwa_incoh_beam make_mwa_incoh_beam.cu)
    link_directories(mwa_tied_array_beam_psf /usr/local/lib/)
    target_link_libraries(make_mwa_incoh_beam vcsbeam /usr/local/lib/libpsrfits_utils.so ${GPU_LIBS}) # TODO : fix temporary
    target_include_directories(make_mwa_incoh_beam PUBLIC ${CMAKE_BINARY_DIR})
    install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/make_mwa_incoh_beam DESTINATION bin)
# endif ()

# Primary beam response

# if (PAL_FOUND AND HYPERBEAM_FOUND)
    add_executable(mwa_track_primary_beam_response mwa_track_primary_beam_response.cu)
    target_link_libraries(mwa_track_primary_beam_response vcsbeam ${GPU_LIBS})
    target_include_directories(mwa_track_primary_beam_response PUBLIC ${CMAKE_BINARY_DIR})
    install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/mwa_track_primary_beam_response DESTINATION bin)
# endif ()

# Tied-array beam PSF
# if (PAL_FOUND AND HYPERBEAM_FOUND)
    add_executable(mwa_tied_array_beam_psf mwa_tied_array_beam_psf.cu)
    link_directories(mwa_tied_array_beam_psf /usr/local/lib/)
    target_link_libraries(mwa_tied_array_beam_psf vcsbeam libpsrfits_utils.so libvdifio.so ${GPU_LIBS}) # TODO : fix temporary
    target_include_directories(mwa_tied_array_beam_psf PUBLIC ${CMAKE_BINARY_DIR})
    install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/mwa_tied_array_beam_psf DESTINATION bin)
# endif ()

